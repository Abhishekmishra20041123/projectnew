<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>HomyStay - Travel with your home</title>

  <!-- PWA Meta Tags -->
  <meta name="description" content="Discover amazing travel destinations and book your next adventure">
  <meta name="theme-color" content="#000000">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
  <meta name="apple-mobile-web-app-title" content="Wanderlust">

  <!-- PWA Manifest -->
  <link rel="manifest" href="/manifest.json">

  <!-- PWA Icons -->
  <link rel="icon" type="image/png" sizes="32x32" href="/icons/icon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/icons/icon-16x16.png">
  <link rel="apple-touch-icon" sizes="180x180" href="/icons/icon-180x180.png">

  <!-- Bootstrap CSS and JS - MUST be loaded first -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-ndDqU0Gzau9qJ1lfW4pNLlhNTkCfHzAVBReH9diLvGRem5+R9g2FzA8ZGN954O5Q"
    crossorigin="anonymous"></script>

  <!-- Other styles - load AFTER Bootstrap -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css">
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/pwa.css">
  <link rel="stylesheet" href="/css/rating.css">

  <!-- Map related resources -->
  <link href="https://api.mapbox.com/mapbox-gl-js/v3.14.0/mapbox-gl.css" rel="stylesheet">
  <script src="https://api.mapbox.com/mapbox-gl-js/v3.14.0/mapbox-gl.js"></script>

  <!-- Dropdown fix - load early -->
  <script src="/js/dropdown-fix.js"></script>

  <!-- Custom CSS to ensure dropdowns stay within viewport -->
  <style>
    /* Fix for dropdowns going outside viewport */
    .dropdown-menu {
      max-height: 90vh !important;
      overflow-y: auto !important;
    }

    .dropdown-menu-end {
      right: 0 !important;
      left: auto !important;
    }

    /* Ensure proper z-index for dropdowns */
    .dropdown {
      z-index: 9999;
    }

    /* Ensure dropdown items are properly contained */
    .dropdown-item {
      white-space: normal;
      word-wrap: break-word;
    }
  </style>
</head>

<body>
  <%- include("../includes/navbar.ejs") %>
    <div class="container" style="margin-bottom: 5px; margin-top: 10px;">
      <%- include("../includes/flash.ejs") %>
        <%- body %>
    </div>
    <%- include("../includes/footer.ejs") %>
      <script src="/js/script.js"></script>
      <script src="/js/file-upload.js"></script>
      <script src="/js/pwa-install.js"></script>
      <script src="/js/navbar-fix.js"></script>
      <script src="/js/booking-response-helper.js"></script>
      <script src="/js/modal-navbar-fix.js"></script>

      <!-- Additional viewport dropdown fix -->
      <script>
        // Function to ensure all dropdowns stay within viewport
        function checkAllDropdowns() {
          document.querySelectorAll('.dropdown-menu').forEach(function (dropdown) {
            // Skip if not visible
            if (!dropdown.classList.contains('show')) return;

            // Get dropdown dimensions and position
            const rect = dropdown.getBoundingClientRect();
            const viewportWidth = window.innerWidth || document.documentElement.clientWidth;
            const viewportHeight = window.innerHeight || document.documentElement.clientHeight;

            // Check if dropdown extends beyond right edge of viewport
            if (rect.right > viewportWidth) {
              console.log('Global fix: dropdown outside right edge');
              dropdown.style.right = '0';
              dropdown.style.left = 'auto';
            }

            // Check if dropdown extends beyond bottom of viewport
            if (rect.bottom > viewportHeight) {
              console.log('Global fix: dropdown outside bottom edge');
              const maxHeight = viewportHeight - rect.top - 20; // 20px buffer
              dropdown.style.maxHeight = maxHeight + 'px';
              dropdown.style.overflowY = 'auto';
            }
          });
        }

        // Monitor window resize events
        window.addEventListener('resize', function () {
          checkAllDropdowns();
        });

        // Check after DOM is loaded
        document.addEventListener('DOMContentLoaded', function () {
          checkAllDropdowns();

          // Add click listeners to dropdown toggles
          document.querySelectorAll('.dropdown-toggle').forEach(function (toggle) {
            toggle.addEventListener('click', function () {
              // Use setTimeout to allow the dropdown to be shown first
              setTimeout(checkAllDropdowns, 0);
            });
          });
        });

        // Also check on window load for maximum reliability
        window.addEventListener('load', checkAllDropdowns);
      </script>

</body>

</html>